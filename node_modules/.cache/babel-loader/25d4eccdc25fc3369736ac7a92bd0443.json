{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Desktop\\\\Projects\\\\FoodOrderApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let newItem, updatedItems;\n\n    if (existingCartItem) {\n      newItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = newItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedtotalamount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedtotalamount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemtoCart = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemfromCart = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCart,\n    removeItem: removeItemfromCart,\n    checkItem: false\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"iSPtzcL/Pl5X1rjJEVQHk2nLpyg=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","newItem","updatedItems","amount","concat","updatedtotalamount","price","existingItem","updatedTotalAmount","filter","updatedItem","CartProvider","props","cartState","dispatchCartAction","addItemtoCart","removeItemfromCart","cartContext","addItem","removeItem","checkItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAmB;AAEnC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EACA;AACI,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAC1BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACI,IAAP,CAAYC,EADJ,CAA9B;AAEA,UAAMC,gBAAgB,GAACP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAAvB;AACA,QAAIK,OAAJ,EAAcC,YAAd;;AACA,QAAGF,gBAAH,EACA;AACGC,MAAAA,OAAO,GAAG,EAAC,GAAGD,gBAAJ;AACbG,QAAAA,MAAM,EAAEH,gBAAgB,CAACG,MAAjB,GAAwBT,MAAM,CAACI,IAAP,CAAYK;AAD/B,OAAV;AAGHD,MAAAA,YAAY,GAAC,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAb;AACAY,MAAAA,YAAY,CAACN,qBAAD,CAAZ,GAAoCK,OAApC;AACC,KAPD,MASH;AACKC,MAAAA,YAAY,GAAET,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACI,IAA1B,CAAd;AACJ;;AAEC,UAAMO,kBAAkB,GAAEZ,KAAK,CAACF,WAAN,GAAkBG,MAAM,CAACI,IAAP,CAAYQ,KAAZ,GAAkBZ,MAAM,CAACI,IAAP,CAAYK,MAA1E;AAEH,WAAO;AACHb,MAAAA,KAAK,EAACY,YADH;AAEHX,MAAAA,WAAW,EAACc;AAFT,KAAP;AAIH;;AACD,MAAIX,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAC3BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EADD,CAA9B;AAGA,UAAMQ,YAAY,GAAGd,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAArB;AACA,UAAMY,kBAAkB,GAAGf,KAAK,CAACF,WAAN,GAAoBgB,YAAY,CAACD,KAA5D;AACA,QAAIJ,YAAJ;;AACA,QAAIK,YAAY,CAACJ,MAAb,KAAwB,CAA5B,EAA+B;AAC7BD,MAAAA,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYmB,MAAZ,CAAmBX,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAA9C,CAAf;AACD,KAFD,MAEO;AACL,YAAMW,WAAW,GAAG,EAAE,GAAGH,YAAL;AAAmBJ,QAAAA,MAAM,EAAEI,YAAY,CAACJ,MAAb,GAAsB;AAAjD,OAApB;AACAD,MAAAA,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;AACAY,MAAAA,YAAY,CAACN,qBAAD,CAAZ,GAAsCc,WAAtC;AACD;;AAED,WAAO;AACLpB,MAAAA,KAAK,EAAEY,YADF;AAELX,MAAAA,WAAW,EAAEiB;AAFR,KAAP;AAID;;AAED,SAAOnB,gBAAP;AACD,CAlDD;;AAoDA,MAAMsB,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,QAAK,CAACC,SAAD,EAAYC,kBAAZ,IAAgC1B,UAAU,CAACI,WAAD,EAAeH,gBAAf,CAA/C;;AAEA,QAAM0B,aAAa,GAAEjB,IAAI,IAAG;AACxBgB,IAAAA,kBAAkB,CAAC;AACfnB,MAAAA,IAAI,EAAE,KADS;AACFG,MAAAA,IAAI,EAACA;AADH,KAAD,CAAlB;AAGH,GAJD;;AAMA,QAAMkB,kBAAkB,GAAEjB,EAAE,IAAG;AAC3Be,IAAAA,kBAAkB,CAAC;AAACnB,MAAAA,IAAI,EAAC,QAAN;AAAgBI,MAAAA,EAAE,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIH,QAAMkB,WAAW,GAAE;AACf3B,IAAAA,KAAK,EAACuB,SAAS,CAACvB,KADD;AAEfC,IAAAA,WAAW,EAACsB,SAAS,CAACtB,WAFP;AAGf2B,IAAAA,OAAO,EAACH,aAHO;AAIfI,IAAAA,UAAU,EAACH,kBAJI;AAKfI,IAAAA,SAAS,EAAC;AALK,GAAnB;AASC,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,WAA7B;AAAA,cACFL,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CA1BD;;GAAMV,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items:[], \r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer = (state , action) =>{\r\n    \r\n    if(action.type==='ADD')\r\n    {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            item => item.id===action.item.id);\r\n        const existingCartItem=state.items[existingCartItemIndex];\r\n        let newItem , updatedItems;\r\n        if(existingCartItem)\r\n        {\r\n           newItem = {...existingCartItem ,\r\n        amount: existingCartItem.amount+action.item.amount}\r\n\r\n        updatedItems=[...state.items];\r\n        updatedItems[existingCartItemIndex]=newItem;\r\n        }\r\n        else\r\n     {\r\n          updatedItems =state.items.concat(action.item);\r\n     }\r\n\r\n       const updatedtotalamount= state.totalAmount+action.item.price*action.item.amount;\r\n    \r\n    return {\r\n        items:updatedItems,\r\n        totalAmount:updatedtotalamount\r\n    }\r\n}\r\nif (action.type === 'REMOVE') {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter(item => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props =>{\r\n\r\n    const[cartState ,dispatchCartAction]=useReducer(cartReducer , defaultCartState); \r\n\r\n    const addItemtoCart =item =>{\r\n        dispatchCartAction({\r\n            type: 'ADD', item:item\r\n        })\r\n    }\r\n\r\n    const removeItemfromCart= id =>{\r\n        dispatchCartAction({type:'REMOVE' ,id: id});\r\n    }\r\n\r\n const cartContext ={\r\n     items:cartState.items,\r\n     totalAmount:cartState.totalAmount,\r\n     addItem:addItemtoCart ,\r\n     removeItem:removeItemfromCart,\r\n     checkItem:false\r\n }\r\n \r\n\r\n  return <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n  </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}