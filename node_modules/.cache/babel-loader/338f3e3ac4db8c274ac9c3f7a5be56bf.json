{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Desktop\\\\Projects\\\\FoodOrderApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedtotalamount = state.totalAmount + action.item.price * action.item.amount;\n  }\n\n  return {\n    items: updatedItems,\n    totalAmount: updatedtotalamount\n  };\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemtoCart = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemfromCart = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCart,\n    removeItem: removeItemfromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"iSPtzcL/Pl5X1rjJEVQHk2nLpyg=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedItems","items","concat","updatedtotalamount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemtoCart","removeItemfromCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAC,EADgB;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EACA;AACI,UAAMC,YAAY,GAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACJ,IAA1B,CAApB;AACA,UAAMS,kBAAkB,GAAEN,KAAK,CAACF,WAAN,GAAkBG,MAAM,CAACJ,IAAP,CAAYU,KAAZ,GAAkBN,MAAM,CAACJ,IAAP,CAAYW,MAA1E;AACH;;AACD,SAAO;AACHJ,IAAAA,KAAK,EAACD,YADH;AAEHL,IAAAA,WAAW,EAACQ;AAFT,GAAP;AAIH,CAVD;;AAYA,MAAMG,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,QAAK,CAACC,SAAD,EAAYC,kBAAZ,IAAgCjB,UAAU,CAACI,WAAD,EAAeH,gBAAf,CAA/C;;AAEA,QAAMiB,aAAa,GAAEhB,IAAI,IAAG;AACxBe,IAAAA,kBAAkB,CAAC;AACfV,MAAAA,IAAI,EAAE,KADS;AACFL,MAAAA,IAAI,EAACA;AADH,KAAD,CAAlB;AAGH,GAJD;;AAMA,QAAMiB,kBAAkB,GAAEC,EAAE,IAAG;AAC3BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAgBa,MAAAA,EAAE,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIH,QAAMC,WAAW,GAAE;AACfZ,IAAAA,KAAK,EAACO,SAAS,CAACP,KADD;AAEfN,IAAAA,WAAW,EAACa,SAAS,CAACb,WAFP;AAGfmB,IAAAA,OAAO,EAACJ,aAHO;AAIfK,IAAAA,UAAU,EAACJ;AAJI,GAAnB;AAOC,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFN,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAxBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    item:[], \r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer = (state , action) =>{\r\n    if(action.type==='ADD')\r\n    {\r\n        const updatedItems =state.items.concat(action.item);\r\n        const updatedtotalamount= state.totalAmount+action.item.price*action.item.amount\r\n    }\r\n    return {\r\n        items:updatedItems,\r\n        totalAmount:updatedtotalamount\r\n    }\r\n}\r\n\r\nconst CartProvider = props =>{\r\n\r\n    const[cartState ,dispatchCartAction]=useReducer(cartReducer , defaultCartState); \r\n\r\n    const addItemtoCart =item =>{\r\n        dispatchCartAction({\r\n            type: 'ADD', item:item\r\n        })\r\n    }\r\n\r\n    const removeItemfromCart= id =>{\r\n        dispatchCartAction({type:'REMOVE' ,id: id});\r\n    }\r\n\r\n const cartContext ={\r\n     items:cartState.items,\r\n     totalAmount:cartState.totalAmount,\r\n     addItem:addItemtoCart ,\r\n     removeItem:removeItemfromCart\r\n }\r\n\r\n  return <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n  </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}