{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Desktop\\\\Projects\\\\FoodOrderApp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport { useContext, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport CheckOut from './CheckOut';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [checkOut, setIsCheckOut] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    const cartItem = { ...item,\n      amount: 1\n    };\n    cartCtx.addItem(cartItem);\n  };\n\n  const eventClickHandler = async userdata => {\n    setIsSubmitted(true);\n    await fetch('https://react-http-8d93b-default-rtdb.firebaseio.com/food.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userdata,\n        cart: cartCtx.items\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsSubmitted(true);\n    setDidSubmit(true); // if(!response.ok)\n    // {\n    //     // console.log(\"^\");\n    //     throw new Error('Something went wrong');\n    // }\n    // const data = response.json();\n    // console.log(data);\n  };\n\n  const orderHandler = () => {\n    setIsCheckOut(true);\n  };\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [CartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), checkOut && /*#__PURE__*/_jsxDEV(CheckOut, {\n      onCancel: props.onClose,\n      onAdd: eventClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), !checkOut && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n\n  const SubmittingModalContent = /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Sending order...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 30\n  }, this);\n\n  const SubmittedModalContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order is successfully placed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), \" ;\"]\n  }, void 0, true);\n\n  const CartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(CartItem, {\n          name: item.name,\n          amount: item.amount,\n          price: item.price,\n          onRemove: cartItemRemoveHandler.bind(null, item.id),\n          onAdd: cartItemAddHandler.bind(null, item)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitted && !didSubmit && cartModalContent, isSubmitted && SubmittingModalContent, didSubmit && SubmittedModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"nc2GvQ8WQgULvtl9pOcpjBi1eU4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/src/components/Cart/Cart.js"],"names":["classes","Modal","useContext","useState","CartContext","CartItem","CheckOut","React","Cart","props","cartCtx","checkOut","setIsCheckOut","isSubmitted","setIsSubmitted","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","cartItem","amount","addItem","eventClickHandler","userdata","fetch","method","body","JSON","stringify","user","cart","headers","orderHandler","cartModalContent","CartItems","total","onClose","actions","button","SubmittingModalContent","SubmittedModalContent","map","name","price","bind"],"mappings":"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","sourcesContent":["import classes from './Cart.module.css';\r\nimport Modal from '../UI/Modal'\r\nimport { useContext , useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport CheckOut from './CheckOut';\r\nimport React from 'react'\r\n\r\n\r\nconst Cart = props =>{\r\n    const cartCtx=useContext(CartContext);\r\n\r\n    const [checkOut ,setIsCheckOut] = useState(false);\r\n    const [isSubmitted ,setIsSubmitted] =useState(false);\r\n    const [didSubmit ,setDidSubmit] = useState(false);\r\n\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n     const hasItems= cartCtx.items.length>0;\r\n    const cartItemRemoveHandler = id=>{\r\n        cartCtx.removeItem(id);\r\n    };\r\n\r\n    const cartItemAddHandler=item=>{\r\n        const cartItem={...item,amount:1}\r\n        cartCtx.addItem(cartItem);\r\n    };\r\n    const eventClickHandler = async(userdata) =>{\r\n        setIsSubmitted(true);\r\n       await fetch('https://react-http-8d93b-default-rtdb.firebaseio.com/food.json',\r\n        {\r\n            method:'POST',\r\n            body:JSON.stringify({\r\n                user:userdata,\r\n                cart:cartCtx.items}),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        })\r\n\r\n        setIsSubmitted(true);\r\n        setDidSubmit(true);\r\n\r\n        // if(!response.ok)\r\n        // {\r\n        //     // console.log(\"^\");\r\n        //     throw new Error('Something went wrong');\r\n        // }\r\n\r\n        // const data = response.json();\r\n        // console.log(data);\r\n    }\r\n\r\n    const orderHandler = ()=>{\r\n        setIsCheckOut(true);\r\n    }\r\n    const cartModalContent =\r\n    <>\r\n    \r\n          {CartItems}\r\n          <div className={classes.total}>\r\n              <span>Total Amount</span>\r\n              <span>{totalAmount}</span>\r\n          </div>\r\n         {checkOut&&<CheckOut onCancel={props.onClose} onAdd={eventClickHandler}/>}\r\n         { !checkOut && \r\n          <div className={classes.actions}>\r\n              <button className={classes['button--alt']}  onClick={props.onClose}>Close</button>\r\n              {hasItems&&<button className={classes.button} onClick={orderHandler}>Order</button>}\r\n          </div>\r\n          }\r\n          \r\n     </>\r\nconst SubmittingModalContent=<h2>Sending order...</h2>\r\nconst SubmittedModalContent=\r\n<>\r\n<h2>Order is successfully placed.</h2>\r\n<div className={classes.actions}>\r\n    <button type ='submit' onClick={props.onClose}>Close</button>\r\n</div> ;\r\n</>\r\n\r\n  const CartItems=<ul className={classes['cart-items']}>\r\n      {\r\n          cartCtx.items.map(item=>{\r\n           return <li><CartItem key={item.id}\r\n           name={item.name}\r\n           amount={item.amount}\r\n           price={item.price}\r\n           onRemove={cartItemRemoveHandler.bind(null,item.id)}\r\n           onAdd={cartItemAddHandler.bind(null,item)}\r\n           />\r\n           </li>\r\n          })\r\n      }\r\n  </ul> \r\n   \r\n  return(\r\n    <Modal onClose={props.onClose}>\r\n    {!isSubmitted && !didSubmit && cartModalContent}\r\n    {isSubmitted && SubmittingModalContent}\r\n    {didSubmit && SubmittedModalContent}\r\n\r\n</Modal>\r\n     \r\n  ) \r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}