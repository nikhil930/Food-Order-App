{"ast":null,"code":"import _slicedToArray from\"C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import CartContext from\"./cart-context\";import{useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var newItem,updatedItems;if(existingCartItem){newItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=newItem;}else{updatedItems=state.items.concat(action.item);}var updatedtotalamount=state.totalAmount+action.item.price*action.item.amount;return{items:updatedItems,totalAmount:updatedtotalamount};}if(action.type==='REMOVE'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[_existingCartItemIndex];var _updatedtotalamount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=updatedItem;}return{items:_updatedItems,totalAmount:_updatedtotalamount};}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemtoCart=function addItemtoCart(item){dispatchCartAction({type:'ADD',item:item});};var removeItemfromCart=function removeItemfromCart(id){dispatchCartAction({type:'REMOVE',id:id});};var clearOnSubmit=function clearOnSubmit(){dispatchCartAction({type:\"CLEAR\"});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemtoCart,removeItem:removeItemfromCart,clearOnSubmit:clearOnSubmit};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/FoodOrderApp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","newItem","updatedItems","amount","concat","updatedtotalamount","price","existingItem","filter","updatedItem","CartProvider","props","cartState","dispatchCartAction","addItemtoCart","removeItemfromCart","clearOnSubmit","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items:[], \r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer = (state , action) =>{\r\n    \r\n    if(action.type==='ADD')\r\n    {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            item => item.id===action.item.id);\r\n        const existingCartItem=state.items[existingCartItemIndex];\r\n        let newItem , updatedItems;\r\n        if(existingCartItem)\r\n        {\r\n           newItem = {...existingCartItem ,\r\n        amount: existingCartItem.amount+action.item.amount}\r\n\r\n        updatedItems=[...state.items];\r\n        updatedItems[existingCartItemIndex]=newItem;\r\n        }\r\n        else\r\n     {\r\n          updatedItems =state.items.concat(action.item);\r\n     }\r\n\r\n       const updatedtotalamount= state.totalAmount+action.item.price*action.item.amount;\r\n    \r\n    return {\r\n        items:updatedItems,\r\n        totalAmount:updatedtotalamount\r\n    }\r\n}\r\nif(action.type==='REMOVE')\r\n{\r\n    const existingCartItemIndex=state.items.findIndex(\r\n        item=> item.id===action.id);\r\n        const existingItem=state.items[existingCartItemIndex];\r\n        const updatedtotalamount=state.totalAmount-existingItem.price;\r\n        let updatedItems;\r\n        if(existingItem.amount===1)\r\n        {\r\n            updatedItems=state.items.filter(item=> item.id !==action.id);\r\n        }\r\n        else\r\n        {\r\n            const updatedItem={ ...existingItem,amount:existingItem.amount-1};\r\n            updatedItems =[...state.items];\r\n            updatedItems[existingCartItemIndex]=updatedItem; \r\n        }\r\n\r\nreturn {\r\n    items:updatedItems,\r\n    totalAmount:updatedtotalamount\r\n}\r\n}\r\nreturn defaultCartState;\r\n}\r\n\r\nconst CartProvider = props =>{\r\n\r\n    const [cartState ,dispatchCartAction]=useReducer(cartReducer , defaultCartState); \r\n\r\n    const addItemtoCart =item =>{\r\n        dispatchCartAction({\r\n            type: 'ADD', item:item\r\n        })\r\n    }\r\n\r\n    const removeItemfromCart= id =>{\r\n        dispatchCartAction({type:'REMOVE' ,id: id});\r\n    }\r\n\r\n    const clearOnSubmit =()=>{\r\n        dispatchCartAction({type:\"CLEAR\"});\r\n    }\r\n\r\n const cartContext ={\r\n     items:cartState.items,\r\n     totalAmount:cartState.totalAmount,\r\n     addItem:addItemtoCart ,\r\n     removeItem:removeItemfromCart,\r\n     clearOnSubmit:clearOnSubmit\r\n }\r\n \r\n\r\n  return <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n  </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}